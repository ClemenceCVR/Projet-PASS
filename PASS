import requests
from bs4 import BeautifulSoup
import matplotlib.pyplot as plt
import numpy as np

"""Fonction qui calcule le coefficient de Zipf d'un nombre de villes aux USA"""

def calculate_zipf_coefficient(nb):
    # Retrieve the list of US metropolitan areas from Wikipedia
    url = "https://en.wikipedia.org/wiki/List_of_metropolitan_statistical_areas"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    table = soup.find_all('table')[1]
    rows = table.find_all('tr')[1:]

    # Extract the name and population of each metropolitan area
    metropolitan_areas = []
    for row in rows:
        cells = row.find_all('td')
        name = cells[0].text.strip()
        population = int(cells[2].text.replace(',', ''))
        metropolitan_areas.append({'name': name, 'population': population})

    # Sort metropolitan areas by population size
    metropolitan_areas = sorted(metropolitan_areas, key=lambda x: x['population'], reverse=True)

    # Take the largest metropolitan areas
    metropolitan_areas = metropolitan_areas[:nb]

    # Calculate the log size and log rank of each metropolitan area
    metropolitan_areas = [{'name': area['name'], 'log_size': np.log(area['population']), 'log_rank': np.log(index + 1)} for index, area in enumerate(metropolitan_areas)]

    # Check if the data follows the Zipf law
    zipf_coefficient = np.polyfit([area['log_rank'] for area in metropolitan_areas], [area['log_size'] for area in metropolitan_areas], 1)[0]
    print(f"Zipf coefficient: {zipf_coefficient:.3f}")

print(calculate_zipf_coefficient(200))
print(calculate_zipf_coefficient(235))
